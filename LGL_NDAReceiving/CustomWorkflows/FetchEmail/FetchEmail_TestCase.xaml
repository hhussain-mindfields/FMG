<Activity mc:Ignorable="sap sap2010" x:Class="FetchEmail_TestCase" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:av="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mg="clr-namespace:Microsoft.Graph;assembly=Microsoft.Graph" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:njl="clr-namespace:Newtonsoft.Json.Linq;assembly=Newtonsoft.Json" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:ss="clr-namespace:System.Security;assembly=mscorlib" xmlns:ucas="clr-namespace:UiPath.Core.Activities.Storage;assembly=UiPath.System.Activities" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:uma="clr-namespace:UiPath.MicrosoftOffice365.Activities;assembly=UiPath.MicrosoftOffice365.Activities" xmlns:umaf="clr-namespace:UiPath.MicrosoftOffice365.Activities.Files;assembly=UiPath.MicrosoftOffice365.Activities" xmlns:umam="clr-namespace:UiPath.MicrosoftOffice365.Activities.Mail;assembly=UiPath.MicrosoftOffice365.Activities" xmlns:umm="clr-namespace:UiPath.MicrosoftOffice365.Models;assembly=UiPath.MicrosoftOffice365" xmlns:uta="clr-namespace:UiPath.Testing.Activities;assembly=UiPath.Testing.Activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="in_str_Account" Type="InArgument(x:String)" />
    <x:Property Name="in_dbl_AHT" Type="InArgument(x:Double)" />
    <x:Property Name="in_sstr_Password" Type="InArgument(x:String)" />
    <x:Property Name="in_str_ApplicationId" Type="InArgument(x:String)" />
    <x:Property Name="in_str_MailFolder" Type="InArgument(x:String)" />
    <x:Property Name="in_str_ProcessingFolder" Type="InArgument(x:String)" />
    <x:Property Name="in_str_QueueName" Type="InArgument(x:String)" />
    <x:Property Name="in_str_RejectedFolder" Type="InArgument(x:String)" />
    <x:Property Name="in_str_SPRootFolder" Type="InArgument(x:String)" />
    <x:Property Name="in_str_SPSite" Type="InArgument(x:String)" />
    <x:Property Name="in_str_SPValidateFolder" Type="InArgument(x:String)" />
    <x:Property Name="in_str_StorageBucket" Type="InArgument(x:String)" />
    <x:Property Name="in_str_TenantId" Type="InArgument(x:String)" />
    <x:Property Name="in_str_Username" Type="InArgument(x:String)" />
    <x:Property Name="in_int_TestCase" Type="InArgument(x:Int32)" />
    <x:Property Name="in_str_TestResult" Type="InArgument(x:String)" />
    <x:Property Name="in_str_TestScenario" Type="InArgument(x:String)" />
  </x:Members>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>1710,8635</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>FetchEmail_TestCase_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="94">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Runtime.InteropServices</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.Security</x:String>
      <x:String>Newtonsoft.Json.Linq</x:String>
      <x:String>Newtonsoft.Json</x:String>
      <x:String>System.Dynamic</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.Collections.Specialized</x:String>
      <x:String>UiPath.Web.Activities</x:String>
      <x:String>System.Activities.DynamicUpdate</x:String>
      <x:String>System.Net</x:String>
      <x:String>UiPath.MicrosoftOffice365.Models</x:String>
      <x:String>Microsoft.Graph</x:String>
      <x:String>UiPath.Testing</x:String>
      <x:String>UiPath.Testing.Activities</x:String>
      <x:String>UiPath.Shared.Telemetry</x:String>
      <x:String>UiPath.Shared.Activities</x:String>
      <x:String>Microsoft.VisualBasic.CompilerServices</x:String>
      <x:String>UiPath.MicrosoftOffice365.Activities.Mail</x:String>
      <x:String>UiPath.MicrosoftOffice365.Activities</x:String>
      <x:String>UiPath.MicrosoftOffice365.Enums</x:String>
      <x:String>UiPath.MicrosoftOffice365.Activities.Files</x:String>
      <x:String>UiPath.Core.Activities.Storage</x:String>
      <x:String>UiPath.Core.Activities.Orchestrator</x:String>
      <x:String>UiPath.Persistence.Activities.FormTask</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="80">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>Microsoft.Bcl.AsyncInterfaces</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.MicrosoftOffice365.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities.Design</AssemblyReference>
      <AssemblyReference>Newtonsoft.Json</AssemblyReference>
      <AssemblyReference>UiPath.Web.Activities</AssemblyReference>
      <AssemblyReference>UiPath.MicrosoftOffice365</AssemblyReference>
      <AssemblyReference>Microsoft.Graph</AssemblyReference>
      <AssemblyReference>Microsoft.Graph.Core</AssemblyReference>
      <AssemblyReference>UiPath.Testing</AssemblyReference>
      <AssemblyReference>UiPath.Testing.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Persistence.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Mail.Activities</AssemblyReference>
      <AssemblyReference>UiPath.MicrosoftOffice365.Activities</AssemblyReference>
      <AssemblyReference>UiPath.PDF.Activities</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities</AssemblyReference>
      <AssemblyReference>System.Runtime.WindowsRuntime</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <sap:WorkflowViewStateService.ViewState>
    <scg:Dictionary x:TypeArguments="x:String, x:Object">
      <x:Boolean x:Key="ShouldExpandAll">True</x:Boolean>
    </scg:Dictionary>
  </sap:WorkflowViewStateService.ViewState>
  <Sequence sap2010:Annotation.AnnotationText="Description: Test cases/script for FetchEmail.&#xA;&#xA;Arguments:&#xA;in_str_ApplicationId - Applicant ID for o365.&#xA;in_str_TenantId - Tenant ID for o365.&#xA;in_str_Username - AD Username for o365.&#xA;in_sstr_Password - Password (SecureString) for o365.&#xA;in_str_Account - Mail account to perform mail operations.&#xA;in_str_MailFolder - Mail folder to fetch the emails from.&#xA;in_str_ProcessingFolder - Mail folder to place the processing mail.&#xA;in_str_RejectedFolder - Mail folder to place/move the invalid/no attachment mail.&#xA;in_str_SPSite - SharePoint site to perform file operations.&#xA;in_str_SPRootFolder - SharePoint Root folders.&#xA;in_str_SPValidateFolder - Validate (subfolder) within root folder.&#xA;in_str_StorageBucket - Orchestrator storage bucket to store and retreive Pg2 and Pg6 img.&#xA;in_str_QueueName - Process specific queue name.&#xA;&#xA;Outcomes:&#xA;Successful - Valid - A PDF retrieved from email, PDF uploaded to SharePoint, Pg2 and Pg6 img uploaded to storage buckets.&#xA;Unsuccessful - out_qi_TransactionItem = NULL, out_di_SubFolders = NULL, out_di_Attachment = NULL, out_str_Pg2StoragePath = &quot;&quot;, out_str_Pg6StoragePath = &quot;&quot;, with exception thrown detailing the error that occurred." DisplayName="FetchEmail_TestCase" sap:VirtualizedContainerService.HintSize="1720,8570" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="x:String" Name="str_MSOffice" />
      <Variable x:TypeArguments="njl:JObject" Name="jobj_MSOffice" />
      <Variable x:TypeArguments="ss:SecureString" Name="sstr_Password" />
      <Variable x:TypeArguments="x:String" Name="str_Username" />
      <Variable x:TypeArguments="x:String" Name="str_ApplicationId" />
      <Variable x:TypeArguments="x:String" Name="str_TenantId" />
      <Variable x:TypeArguments="ui:QueueItem" Name="qi_TransactionItem" />
      <Variable x:TypeArguments="umm:Office365Message" Name="o365m_ProcessingMail" />
      <Variable x:TypeArguments="mg:DriveItem" Name="di_Attachment" />
      <Variable x:TypeArguments="mg:DriveItem[]" Name="di_SubFolders" />
      <Variable x:TypeArguments="x:String" Name="str_Pg2StoragePath" />
      <Variable x:TypeArguments="x:String" Name="str_Pg6StoragePath" />
      <Variable x:TypeArguments="s:Exception" Name="exc_Exception" />
      <Variable x:TypeArguments="x:String" Name="str_PDFPath" />
      <Variable x:TypeArguments="umm:Office365Message[]" Name="o365m_Mails" />
      <Variable x:TypeArguments="x:Boolean" Name="bln_EmailSent" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="1678,91" sap2010:WorkflowViewState.IdRef="LogMessage_1" Level="Info" Message="[&quot;==FetchEmail_TestCase== Started.&quot;]" />
    <Sequence DisplayName="... Given" sap:VirtualizedContainerService.HintSize="1678,5497" sap2010:WorkflowViewState.IdRef="Sequence_2">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="716,91" sap2010:WorkflowViewState.IdRef="LogMessage_2" Level="Info" Message="[&quot;==FetchEmail_TestCase== Test Case No..: &quot; +in_int_TestCase.ToString+ &quot;, Test Scenario: &quot; +in_str_TestScenario+ &quot;.&quot;]" />
      <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="716,91" sap2010:WorkflowViewState.IdRef="LogMessage_3" Level="Info" Message="[&quot;==FetchEmail_TestCase== Getting AD credentials.&quot;]" />
      <ui:GetRobotCredential TimeoutMS="{x:Null}" AssetName="AD_ANHANSEN_LBISHOP" DisplayName="Get Credential: AD" sap:VirtualizedContainerService.HintSize="716,79" sap2010:WorkflowViewState.IdRef="GetRobotCredential_1" Password="[sstr_Password]" Username="[str_Username]" />
      <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="716,91" sap2010:WorkflowViewState.IdRef="LogMessage_4" Level="Info" Message="[&quot;==FetchEmail_TestCase== Getting MSOffice365 connection data.&quot;]" />
      <ui:GetRobotAsset TimeoutMS="{x:Null}" AssetName="MSOffice365_ConnectionData" DisplayName="Get Asset: MSOffice365" sap:VirtualizedContainerService.HintSize="716,137" sap2010:WorkflowViewState.IdRef="GetRobotAsset_1">
        <ui:GetRobotAsset.Value>
          <OutArgument x:TypeArguments="x:String">[str_MSOffice]</OutArgument>
        </ui:GetRobotAsset.Value>
      </ui:GetRobotAsset>
      <ui:DeserializeJson x:TypeArguments="njl:JObject" DisplayName="Deserialize JSON" sap:VirtualizedContainerService.HintSize="716,60" sap2010:WorkflowViewState.IdRef="DeserializeJson`1_1" JsonObject="[jobj_MSOffice]" JsonString="[str_MSOffice]" />
      <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="716,91" sap2010:WorkflowViewState.IdRef="LogMessage_5" Level="Info" Message="[&quot;==FetchEmail_TestCase== Setting up MSOffice365 connection and credential test data.&quot;]" />
      <Sequence sap2010:Annotation.AnnotationText="The input arguments for the test scenarios here use the word 'Default' to represent whether the default value from the connection and credential assets should be used. These IF statements check if it's Default and if it is, then it grabs the correct asset value. If it isn't, then it just uses the existing input value." DisplayName="Sequence: If Defaults" sap:VirtualizedContainerService.HintSize="716,1199" sap2010:WorkflowViewState.IdRef="Sequence_5">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <If Condition="[in_str_ApplicationId = &quot;Default&quot;]" DisplayName="If: Application Id is Default" sap:VirtualizedContainerService.HintSize="569,218" sap2010:WorkflowViewState.IdRef="If_1">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <If.Then>
            <Assign DisplayName="Assign: Application Id" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_1">
              <Assign.To>
                <OutArgument x:TypeArguments="x:String">[str_ApplicationId]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:String">[jobj_MSOffice("ApplicationId").ToString]</InArgument>
              </Assign.Value>
            </Assign>
          </If.Then>
          <If.Else>
            <Assign DisplayName="Assign: Application Id" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_2">
              <Assign.To>
                <OutArgument x:TypeArguments="x:String">[str_ApplicationId]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:String">[in_str_ApplicationId]</InArgument>
              </Assign.Value>
            </Assign>
          </If.Else>
        </If>
        <If Condition="[in_str_TenantId = &quot;Default&quot;]" DisplayName="If: Tenant Id is Default" sap:VirtualizedContainerService.HintSize="569,218" sap2010:WorkflowViewState.IdRef="If_2">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <If.Then>
            <Assign DisplayName="Assign: Tenant Id" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_3">
              <Assign.To>
                <OutArgument x:TypeArguments="x:String">[str_TenantId]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:String">[jobj_MSOffice("TenantId").ToString]</InArgument>
              </Assign.Value>
            </Assign>
          </If.Then>
          <If.Else>
            <Assign DisplayName="Assign: Tenant Id" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_4">
              <Assign.To>
                <OutArgument x:TypeArguments="x:String">[str_TenantId]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:String">[in_str_TenantId]</InArgument>
              </Assign.Value>
            </Assign>
          </If.Else>
        </If>
        <If Condition="[in_str_Username &lt;&gt; &quot;Default&quot;]" DisplayName="If: Username is NOT Default" sap:VirtualizedContainerService.HintSize="569,247" sap2010:WorkflowViewState.IdRef="If_3">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <If.Then>
            <Assign DisplayName="Assign: Username" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_5">
              <Assign.To>
                <OutArgument x:TypeArguments="x:String">[str_Username]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:String">[in_str_Username]</InArgument>
              </Assign.Value>
            </Assign>
          </If.Then>
        </If>
        <If Condition="[in_sstr_Password &lt;&gt; &quot;Default&quot;]" DisplayName="If: Password is NOT Default" sap:VirtualizedContainerService.HintSize="569,247" sap2010:WorkflowViewState.IdRef="If_4">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <If.Then>
            <Assign DisplayName="Assign: Password" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_6">
              <Assign.To>
                <OutArgument x:TypeArguments="ss:SecureString">[sstr_Password]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="ss:SecureString">[New Net.NetworkCredential("",in_sstr_Password).SecurePassword]</InArgument>
              </Assign.Value>
            </Assign>
          </If.Then>
        </If>
      </Sequence>
      <uma:Office365ApplicationScope ApplicationSecret="{x:Null}" CertificateAsBase64="{x:Null}" CertificatePassword="{x:Null}" ContinueOnError="{x:Null}" Password="{x:Null}" SecureApplicationSecret="{x:Null}" ApplicationId="[str_ApplicationId]" AuthenticationType="UsernameAndPassword" DisplayName="Microsoft Office 365 Scope: Send Test Case Mail" Environment="Global" sap:VirtualizedContainerService.HintSize="716,3246" sap2010:WorkflowViewState.IdRef="Office365ApplicationScope_2" OAuthApplication="Custom" SecurePassword="[sstr_Password]" Services="Mail" Tenant="[str_TenantId]" Timeout="300000" Username="[str_Username]">
        <uma:Office365ApplicationScope.Body>
          <ActivityAction x:TypeArguments="mg:GraphServiceClient">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="mg:GraphServiceClient" Name="ParentScope" />
            </ActivityAction.Argument>
            <Sequence DisplayName="Sequence: Send Test Case Mail" sap:VirtualizedContainerService.HintSize="682,3160" sap2010:WorkflowViewState.IdRef="Sequence_29">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <If Condition="[in_str_ApplicationId&lt;&gt;&quot;blah&quot; And in_str_TenantId&lt;&gt;&quot;blah&quot; And in_str_Username&lt;&gt;&quot;blah&quot; And in_sstr_Password&lt;&gt;&quot;blah&quot; And in_str_Account&lt;&gt;&quot;blah&quot; And in_str_MailFolder&lt;&gt;&quot;blah&quot; And Not in_str_TestScenario.Equals(&quot;BE thrown for invalid PDF.&quot;)]" DisplayName="If: Mail items are valid, trigger NDA test scenario mail - valid PDF" sap:VirtualizedContainerService.HintSize="640,828" sap2010:WorkflowViewState.IdRef="If_7">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <If.Then>
                  <Sequence DisplayName="Do: Send Mail" sap:VirtualizedContainerService.HintSize="476,642" sap2010:WorkflowViewState.IdRef="Sequence_12">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <Assign DisplayName="Assign: str_PDFPath" sap:VirtualizedContainerService.HintSize="434,60" sap2010:WorkflowViewState.IdRef="Assign_9">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:String">[str_PDFPath]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String">\\fmg.local\f_drive\RPA\LGL_NDAReceiving\FetchEmail\3153_001_NDA.pdf</InArgument>
                      </Assign.Value>
                    </Assign>
                    <umam:SendMail AttachmentsCollection="{x:Null}" Bcc="{x:Null}" Body="{x:Null}" Cc="{x:Null}" From="{x:Null}" ReplyTo="{x:Null}" Account="[in_str_Account]" DisplayName="Send Mail: Test scenario mail" sap:VirtualizedContainerService.HintSize="434,350" sap2010:WorkflowViewState.IdRef="SendMail_2" Importance="Normal" IsBodyHTML="False" IsDraft="False" Subject="[&quot;NDA_Receiving_TestMail_TC&quot; +in_int_TestCase.ToString]" To="[str_Username.Split(&quot;;&quot;c)]">
                      <umam:SendMail.Attachments>
                        <scg:List x:TypeArguments="InArgument(x:String)" Capacity="4">
                          <InArgument x:TypeArguments="x:String">[str_PDFPath]</InArgument>
                        </scg:List>
                      </umam:SendMail.Attachments>
                    </umam:SendMail>
                    <Assign DisplayName="Assign: bln_EmailSent" sap:VirtualizedContainerService.HintSize="434,60" sap2010:WorkflowViewState.IdRef="Assign_11">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:Boolean">[bln_EmailSent]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                      </Assign.Value>
                    </Assign>
                  </Sequence>
                </If.Then>
              </If>
              <If Condition="[in_str_ApplicationId&lt;&gt;&quot;blah&quot; And in_str_TenantId&lt;&gt;&quot;blah&quot; And in_str_Username&lt;&gt;&quot;blah&quot; And in_sstr_Password&lt;&gt;&quot;blah&quot; And in_str_Account&lt;&gt;&quot;blah&quot; And in_str_MailFolder&lt;&gt;&quot;blah&quot; And in_str_TestScenario.Equals(&quot;BE thrown for invalid PDF.&quot;)]" DisplayName="If: Mail items are valid, trigger NDA test scenario mail - invalid PDF" sap:VirtualizedContainerService.HintSize="640,828" sap2010:WorkflowViewState.IdRef="If_19">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <If.Then>
                  <Sequence DisplayName="Do: Send Mail" sap:VirtualizedContainerService.HintSize="476,642" sap2010:WorkflowViewState.IdRef="Sequence_30">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <Assign DisplayName="Assign: str_PDFPath" sap:VirtualizedContainerService.HintSize="434,60" sap2010:WorkflowViewState.IdRef="Assign_10">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:String">[str_PDFPath]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String">\\fmg.local\f_drive\RPA\LGL_NDAReceiving\FetchEmail\invoice1.pdf</InArgument>
                      </Assign.Value>
                    </Assign>
                    <umam:SendMail AttachmentsCollection="{x:Null}" Bcc="{x:Null}" Body="{x:Null}" Cc="{x:Null}" From="{x:Null}" ReplyTo="{x:Null}" Account="[in_str_Account]" DisplayName="Send Mail: Test scenario mail" sap:VirtualizedContainerService.HintSize="434,350" sap2010:WorkflowViewState.IdRef="SendMail_3" Importance="Normal" IsBodyHTML="False" IsDraft="False" Subject="[&quot;NDA_Receiving_TestMail_TC&quot; +in_int_TestCase.ToString]" To="[str_Username.Split(&quot;;&quot;c)]">
                      <umam:SendMail.Attachments>
                        <scg:List x:TypeArguments="InArgument(x:String)" Capacity="4">
                          <InArgument x:TypeArguments="x:String">[str_PDFPath]</InArgument>
                        </scg:List>
                      </umam:SendMail.Attachments>
                    </umam:SendMail>
                    <Assign DisplayName="Assign: bln_EmailSent" sap:VirtualizedContainerService.HintSize="434,60" sap2010:WorkflowViewState.IdRef="Assign_12">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:Boolean">[bln_EmailSent]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                      </Assign.Value>
                    </Assign>
                  </Sequence>
                </If.Then>
              </If>
              <If Condition="[bln_EmailSent]" DisplayName="If: bln_EmailSent" sap:VirtualizedContainerService.HintSize="640,1332" sap2010:WorkflowViewState.IdRef="If_20">
                <If.Then>
                  <Sequence DisplayName="Sequence: Validate mail received?" sap:VirtualizedContainerService.HintSize="604,1146" sap2010:WorkflowViewState.IdRef="Sequence_34">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <ui:InterruptibleWhile Condition="[1=1]" DisplayName="While: Loop till Mail found in in_str_MailFolder" sap:VirtualizedContainerService.HintSize="562,923" sap2010:WorkflowViewState.IdRef="InterruptibleWhile_3">
                      <ui:InterruptibleWhile.Body>
                        <Sequence DisplayName="Body: Get Mail" sap:VirtualizedContainerService.HintSize="526,758" sap2010:WorkflowViewState.IdRef="Sequence_33">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <umam:GetMail Query="{x:Null}" Account="[in_str_Account]" DisplayName="Get Mail: in_str_MailFolder" GetAsHTML="False" sap:VirtualizedContainerService.HintSize="484,22" sap2010:WorkflowViewState.IdRef="GetMail_8" MailFolder="[in_str_MailFolder]" MarkAsRead="False" OnlyUnreadMessages="True" Results="[o365m_Mails]" Top="1" />
                          <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="484,61" sap2010:WorkflowViewState.IdRef="WriteLine_2" Text="[o365m_Mails.Count.ToString]" />
                          <If Condition="[o365m_Mails.Count=0]" DisplayName="If: No email, next iteration" sap:VirtualizedContainerService.HintSize="484,246" sap2010:WorkflowViewState.IdRef="If_21">
                            <If.Then>
                              <ui:Continue sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="Continue_3" />
                            </If.Then>
                          </If>
                          <If Condition="[o365m_Mails(0).Subject.Equals(&quot;NDA_Receiving_TestMail_TC&quot; +in_int_TestCase.ToString)]" DisplayName="If: 1st email has the same subject -&gt; break, else next iteration" sap:VirtualizedContainerService.HintSize="484,217" sap2010:WorkflowViewState.IdRef="If_22">
                            <If.Then>
                              <ui:Break sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="Break_2" />
                            </If.Then>
                            <If.Else>
                              <ui:Continue sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="Continue_4" />
                            </If.Else>
                          </If>
                        </Sequence>
                      </ui:InterruptibleWhile.Body>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </ui:InterruptibleWhile>
                    <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="562,91" sap2010:WorkflowViewState.IdRef="LogMessage_8" Level="Info" Message="[&quot;==FetchEmail_TestCase== Email sent and moved to folder: &quot; +in_str_MailFolder+ &quot;.&quot;]">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </ui:LogMessage>
                  </Sequence>
                </If.Then>
                <If.Else>
                  <Sequence sap2010:WorkflowViewState.IdRef="Sequence_32">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                  </Sequence>
                </If.Else>
              </If>
            </Sequence>
          </ActivityAction>
        </uma:Office365ApplicationScope.Body>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </uma:Office365ApplicationScope>
    </Sequence>
    <Sequence DisplayName="... When" sap:VirtualizedContainerService.HintSize="1678,643" sap2010:WorkflowViewState.IdRef="Sequence_3">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <TryCatch DisplayName="Try Catch" sap:VirtualizedContainerService.HintSize="438,551" sap2010:WorkflowViewState.IdRef="TryCatch_1">
        <TryCatch.Try>
          <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke FetchEmail workflow" sap:VirtualizedContainerService.HintSize="360,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_1" UnSafe="False" WorkflowFileName="CustomWorkflows\FetchEmail\FetchEmail.xaml">
            <ui:InvokeWorkflowFile.Arguments>
              <InArgument x:TypeArguments="x:String" x:Key="in_str_ApplicationId">[str_ApplicationId]</InArgument>
              <InArgument x:TypeArguments="x:String" x:Key="in_str_TenantId">[str_TenantId]</InArgument>
              <InArgument x:TypeArguments="x:String" x:Key="in_str_Username">[str_Username]</InArgument>
              <InArgument x:TypeArguments="ss:SecureString" x:Key="in_sstr_Password">[sstr_Password]</InArgument>
              <InArgument x:TypeArguments="x:String" x:Key="in_str_Account">[in_str_Account]</InArgument>
              <InArgument x:TypeArguments="x:String" x:Key="in_str_MailFolder">[in_str_MailFolder]</InArgument>
              <InArgument x:TypeArguments="x:String" x:Key="in_str_ProcessingFolder">[in_str_ProcessingFolder]</InArgument>
              <InArgument x:TypeArguments="x:String" x:Key="in_str_QueueName">[in_str_QueueName]</InArgument>
              <OutArgument x:TypeArguments="ui:QueueItem" x:Key="out_qi_TransactionItem">[qi_TransactionItem]</OutArgument>
              <OutArgument x:TypeArguments="umm:Office365Message" x:Key="out_o365m_ProcessingMail">[o365m_ProcessingMail]</OutArgument>
              <InArgument x:TypeArguments="x:String" x:Key="in_str_StorageBucket">[in_str_StorageBucket]</InArgument>
              <InArgument x:TypeArguments="x:String" x:Key="in_str_SPSite">[in_str_SPSite]</InArgument>
              <InArgument x:TypeArguments="x:String" x:Key="in_str_SPRootFolder">[in_str_SPRootFolder]</InArgument>
              <InArgument x:TypeArguments="x:String" x:Key="in_str_SPValidateFolder">[in_str_SPValidateFolder]</InArgument>
              <OutArgument x:TypeArguments="mg:DriveItem" x:Key="out_di_Attachment">[di_Attachment]</OutArgument>
              <OutArgument x:TypeArguments="mg:DriveItem[]" x:Key="out_di_SubFolders">[di_SubFolders]</OutArgument>
              <OutArgument x:TypeArguments="x:String" x:Key="out_str_Pg2StoragePath">[str_Pg2StoragePath]</OutArgument>
              <OutArgument x:TypeArguments="x:String" x:Key="out_str_Pg6StoragePath">[str_Pg6StoragePath]</OutArgument>
              <InArgument x:TypeArguments="x:String" x:Key="in_str_RejectedFolder">[in_str_RejectedFolder]</InArgument>
              <InArgument x:TypeArguments="x:Double" x:Key="in_dbl_BizExpAHT">5</InArgument>
            </ui:InvokeWorkflowFile.Arguments>
          </ui:InvokeWorkflowFile>
        </TryCatch.Try>
        <TryCatch.Catches>
          <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="404,129" sap2010:WorkflowViewState.IdRef="Catch`1_1">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ActivityAction x:TypeArguments="s:Exception">
              <ActivityAction.Argument>
                <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
              </ActivityAction.Argument>
              <Assign DisplayName="Assign: SE" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_7">
                <Assign.To>
                  <OutArgument x:TypeArguments="s:Exception">[exc_Exception]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="s:Exception">[exception]</InArgument>
                </Assign.Value>
              </Assign>
            </ActivityAction>
          </Catch>
        </TryCatch.Catches>
      </TryCatch>
    </Sequence>
    <Sequence DisplayName="... Then" sap:VirtualizedContainerService.HintSize="1678,1684" sap2010:WorkflowViewState.IdRef="Sequence_4">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="1601,91" sap2010:WorkflowViewState.IdRef="LogMessage_6" Level="Info" Message="[&quot;==FetchEmail_TestCase== Verify results.&quot;]" />
      <If Condition="[exc_Exception is Nothing]" DisplayName="If: exception is nothing" sap:VirtualizedContainerService.HintSize="1601,1461" sap2010:WorkflowViewState.IdRef="If_6">
        <If.Then>
          <Sequence DisplayName="Sequence: Successful verify" sap:VirtualizedContainerService.HintSize="576,1303" sap2010:WorkflowViewState.IdRef="Sequence_7">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <uta:VerifyExpression AlternativeVerificationTitle="{x:Null}" KeepScreenshots="{x:Null}" OutputMessageFormat="{x:Null}" Result="{x:Null}" ScreenshotsPath="{x:Null}" ContinueOnFailure="True" DisplayName="Verify Expression" Expression="[qi_TransactionItem.Reference.ToLower.Contains(o365m_ProcessingMail.Subject.ToLower) And di_Attachment.Name.ToLower.Equals(o365m_ProcessingMail.Attachments(0).Name.ToLower) And str_Pg2StoragePath.ToLower.Contains(o365m_ProcessingMail.Sender.Address.ToLower.Replace(&quot;.&quot;,&quot;_&quot;).Replace(&quot;@&quot;,&quot;_&quot;)) And str_Pg2StoragePath.ToLower.Contains(o365m_ProcessingMail.Sender.Address.ToLower.Replace(&quot;.&quot;,&quot;_&quot;).Replace(&quot;@&quot;,&quot;_&quot;))]" sap:VirtualizedContainerService.HintSize="534,61" sap2010:WorkflowViewState.IdRef="VerifyExpression_1" TakeScreenshotInCaseOfFailingAssertion="False" TakeScreenshotInCaseOfSucceedingAssertion="False" />
            <If Condition="[in_str_ApplicationId&lt;&gt;&quot;blah&quot; And in_str_TenantId&lt;&gt;&quot;blah&quot; And in_str_Username&lt;&gt;&quot;blah&quot; And in_sstr_Password&lt;&gt;&quot;blah&quot; And in_str_Account&lt;&gt;&quot;blah&quot; And in_str_MailFolder&lt;&gt;&quot;blah&quot; And in_str_ProcessingFolder&lt;&gt;&quot;blah&quot;]" DisplayName="If: Mail items are valid, delete o365m_ProcessingMail, di_Attachment and pg2 Pg6 img" sap:VirtualizedContainerService.HintSize="534,1110" sap2010:WorkflowViewState.IdRef="If_8">
              <If.Then>
                <uma:Office365ApplicationScope ApplicationSecret="{x:Null}" CertificateAsBase64="{x:Null}" CertificatePassword="{x:Null}" ContinueOnError="{x:Null}" Password="{x:Null}" SecureApplicationSecret="{x:Null}" ApplicationId="[str_ApplicationId]" AuthenticationType="UsernameAndPassword" DisplayName="Microsoft Office 365 Scope: Mail, file, img" Environment="Global" sap:VirtualizedContainerService.HintSize="434,923" sap2010:WorkflowViewState.IdRef="Office365ApplicationScope_3" OAuthApplication="Custom" SecurePassword="[sstr_Password]" Services="Mail" Tenant="[str_TenantId]" Timeout="300000" Username="[str_Username]">
                  <uma:Office365ApplicationScope.Body>
                    <ActivityAction x:TypeArguments="mg:GraphServiceClient">
                      <ActivityAction.Argument>
                        <DelegateInArgument x:TypeArguments="mg:GraphServiceClient" Name="ParentScope" />
                      </ActivityAction.Argument>
                      <Sequence DisplayName="Sequence: Delete" sap:VirtualizedContainerService.HintSize="376,837" sap2010:WorkflowViewState.IdRef="Sequence_16">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <umam:DeleteMail Account="{x:Null}" DisplayName="Delete Mail: out_o365m_ProcessingMail" sap:VirtualizedContainerService.HintSize="334,84" sap2010:WorkflowViewState.IdRef="DeleteMail_1" Message="[o365m_ProcessingMail]" PermanentlyDelete="False" />
                        <umaf:DeleteItem DisplayName="Delete Item: di_Attachment" DriveItem="[di_Attachment]" sap:VirtualizedContainerService.HintSize="334,84" sap2010:WorkflowViewState.IdRef="DeleteItem_1" />
                        <ucas:DeleteStorageFile TimeoutMS="{x:Null}" sap2010:Annotation.AnnotationText="Delete Pg2 img from storage bucket." DisplayName="Delete Storage File: Pg2.png" sap:VirtualizedContainerService.HintSize="334,163" sap2010:WorkflowViewState.IdRef="DeleteStorageFile_2" Path="[str_Pg2StoragePath]" StorageBucketName="[in_str_StorageBucket]">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                        </ucas:DeleteStorageFile>
                        <ucas:DeleteStorageFile TimeoutMS="{x:Null}" sap2010:Annotation.AnnotationText="Delete Pg6 img from storage bucket." DisplayName="Delete Storage File: Pg6.png" sap:VirtualizedContainerService.HintSize="334,163" sap2010:WorkflowViewState.IdRef="DeleteStorageFile_1" Path="[str_Pg6StoragePath]" StorageBucketName="[in_str_StorageBucket]">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                        </ucas:DeleteStorageFile>
                        <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334,91" sap2010:WorkflowViewState.IdRef="LogMessage_9" Level="Info" Message="[&quot;==FetchEmail_TestCase== Mail deleted from folder: &quot; +in_str_ProcessingFolder+ &quot;, PDF deleted from SP folder: &quot; +in_str_SPValidateFolder+ &quot;, Pg2 and Pg6 img deleted from Storage Bucket: &quot; +in_str_StorageBucket+ &quot;.&quot;]" />
                      </Sequence>
                    </ActivityAction>
                  </uma:Office365ApplicationScope.Body>
                </uma:Office365ApplicationScope>
              </If.Then>
            </If>
          </Sequence>
        </If.Then>
        <If.Else>
          <Sequence DisplayName="Sequence: Exception verify" sap:VirtualizedContainerService.HintSize="980,1053" sap2010:WorkflowViewState.IdRef="Sequence_8">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <uta:VerifyExpressionWithOperator AlternativeVerificationTitle="{x:Null}" KeepScreenshots="{x:Null}" OutputMessageFormat="{x:Null}" Result="{x:Null}" ScreenshotsPath="{x:Null}" ContinueOnFailure="True" DisplayName="Verify Expression with Operator" sap:VirtualizedContainerService.HintSize="938,61" sap2010:WorkflowViewState.IdRef="VerifyExpressionWithOperator_1" Operator="Contains" TakeScreenshotInCaseOfFailingAssertion="False" TakeScreenshotInCaseOfSucceedingAssertion="False">
              <uta:VerifyExpressionWithOperator.FirstExpression>
                <InArgument x:TypeArguments="x:String">[exc_Exception.Message]</InArgument>
              </uta:VerifyExpressionWithOperator.FirstExpression>
              <uta:VerifyExpressionWithOperator.SecondExpression>
                <InArgument x:TypeArguments="x:String">[in_str_TestResult]</InArgument>
              </uta:VerifyExpressionWithOperator.SecondExpression>
            </uta:VerifyExpressionWithOperator>
            <uma:Office365ApplicationScope ApplicationSecret="{x:Null}" CertificateAsBase64="{x:Null}" CertificatePassword="{x:Null}" ContinueOnError="{x:Null}" Password="{x:Null}" SecureApplicationSecret="{x:Null}" ApplicationId="[str_ApplicationId]" AuthenticationType="UsernameAndPassword" DisplayName="Microsoft Office 365 Scope: Mail" Environment="Global" sap:VirtualizedContainerService.HintSize="938,860" sap2010:WorkflowViewState.IdRef="Office365ApplicationScope_4" OAuthApplication="Custom" SecurePassword="[sstr_Password]" Services="Mail" Tenant="[str_TenantId]" Timeout="300000" Username="[str_Username]">
              <uma:Office365ApplicationScope.Body>
                <ActivityAction x:TypeArguments="mg:GraphServiceClient">
                  <ActivityAction.Argument>
                    <DelegateInArgument x:TypeArguments="mg:GraphServiceClient" Name="ParentScope" />
                  </ActivityAction.Argument>
                  <Flowchart sap:VirtualizedContainerService.HintSize="904,774" sap2010:WorkflowViewState.IdRef="Flowchart_1">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                        <av:Point x:Key="ShapeLocation">310,2.5</av:Point>
                        <av:Size x:Key="ShapeSize">60,75</av:Size>
                        <av:PointCollection x:Key="ConnectorLocation">340,77.5 340,127.5</av:PointCollection>
                        <x:Double x:Key="Width">869.641666666667</x:Double>
                        <x:Double x:Key="Height">738</x:Double>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <Flowchart.StartNode>
                      <x:Reference>__ReferenceID10</x:Reference>
                    </Flowchart.StartNode>
                    <FlowStep x:Name="__ReferenceID0">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <av:Point x:Key="ShapeLocation">0,405</av:Point>
                          <av:Size x:Key="ShapeSize">200,51</av:Size>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="200,51" sap2010:WorkflowViewState.IdRef="LogMessage_15" Level="Info" Message="[&quot;==FetchEmail_TestCase== Mail deleted from folder: &quot; +in_str_ProcessingFolder+ &quot;.&quot;]" />
                    </FlowStep>
                    <FlowStep x:Name="__ReferenceID1">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <av:Point x:Key="ShapeLocation">0,274</av:Point>
                          <av:Size x:Key="ShapeSize">200,93</av:Size>
                          <av:PointCollection x:Key="ConnectorLocation">100,367 100,405</av:PointCollection>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <ui:ForEach x:TypeArguments="umm:Office365Message" CurrentIndex="{x:Null}" sap2010:Annotation.AnnotationText="Loop through each mail, and when match found, delete." DisplayName="For Each: Mail in o365m_Mails" sap:VirtualizedContainerService.HintSize="200,93" sap2010:WorkflowViewState.IdRef="ForEach`1_5" Values="[o365m_Mails]">
                        <ui:ForEach.Body>
                          <ActivityAction x:TypeArguments="umm:Office365Message">
                            <ActivityAction.Argument>
                              <DelegateInArgument x:TypeArguments="umm:Office365Message" Name="o365m_Mail" />
                            </ActivityAction.Argument>
                            <If Condition="[o365m_Mail.Subject.Equals(&quot;NDA_Receiving_TestMail_TC&quot; +in_int_TestCase.ToString)]" DisplayName="If: Subject Matches, delete the mail" sap:VirtualizedContainerService.HintSize="484,271" sap2010:WorkflowViewState.IdRef="If_18">
                              <If.Then>
                                <umam:DeleteMail Account="{x:Null}" DisplayName="Delete Mail: o365m_Mail" sap:VirtualizedContainerService.HintSize="334,84" sap2010:WorkflowViewState.IdRef="DeleteMail_7" Message="[o365m_Mail]" PermanentlyDelete="False" />
                              </If.Then>
                              <If.Else>
                                <Sequence sap2010:WorkflowViewState.IdRef="Sequence_28">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                </Sequence>
                              </If.Else>
                            </If>
                          </ActivityAction>
                        </ui:ForEach.Body>
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                      </ui:ForEach>
                      <FlowStep.Next>
                        <x:Reference>__ReferenceID0</x:Reference>
                      </FlowStep.Next>
                    </FlowStep>
                    <FlowStep x:Name="__ReferenceID2">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <av:Point x:Key="ShapeLocation">0,160</av:Point>
                          <av:Size x:Key="ShapeSize">200,64</av:Size>
                          <av:PointCollection x:Key="ConnectorLocation">100,224 100,274</av:PointCollection>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <umam:GetMail Query="{x:Null}" Account="[in_str_Account]" sap2010:Annotation.AnnotationText="Get all mails from in_str_ProcessingFolder" DisplayName="Get Mail: in_str_ProcessingFolder" GetAsHTML="False" sap:VirtualizedContainerService.HintSize="200,64" sap2010:WorkflowViewState.IdRef="GetMail_6" MailFolder="[in_str_ProcessingFolder]" MarkAsRead="False" OnlyUnreadMessages="False" Results="[o365m_Mails]" Top="[Int32.MaxValue]">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                      </umam:GetMail>
                      <FlowStep.Next>
                        <x:Reference>__ReferenceID1</x:Reference>
                      </FlowStep.Next>
                    </FlowStep>
                    <FlowDecision x:Name="__ReferenceID10" sap2010:Annotation.AnnotationText="FD: Email in Processing Folder?" Condition="[in_str_ApplicationId&lt;&gt;&quot;blah&quot; And in_str_TenantId&lt;&gt;&quot;blah&quot; And in_str_Username&lt;&gt;&quot;blah&quot; And in_sstr_Password&lt;&gt;&quot;blah&quot; And in_str_Account&lt;&gt;&quot;blah&quot; And in_str_MailFolder&lt;&gt;&quot;blah&quot; And in_str_ProcessingFolder&lt;&gt;&quot;blah&quot; And Not in_str_TestScenario.Equals(&quot;BE thrown for invalid PDF.&quot;)]" DisplayName="FD: Email in Processing Folder?" sap:VirtualizedContainerService.HintSize="160,129" sap2010:WorkflowViewState.IdRef="FlowDecision_1" True="{x:Reference __ReferenceID2}">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          <av:Point x:Key="ShapeLocation">260,127.5</av:Point>
                          <av:Size x:Key="ShapeSize">160,129</av:Size>
                          <av:PointCollection x:Key="TrueConnector">260,192 200,192</av:PointCollection>
                          <av:PointCollection x:Key="FalseConnector">420,192 567.141666666667,192 567.141666666667,267.5</av:PointCollection>
                          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <FlowDecision.False>
                        <FlowDecision x:Name="__ReferenceID3" sap2010:Annotation.AnnotationText="FD: Email in MailFolder?" Condition="[in_str_ApplicationId&lt;&gt;&quot;blah&quot; And in_str_TenantId&lt;&gt;&quot;blah&quot; And in_str_Username&lt;&gt;&quot;blah&quot; And in_sstr_Password&lt;&gt;&quot;blah&quot; And in_str_Account&lt;&gt;&quot;blah&quot; And in_str_MailFolder&lt;&gt;&quot;blah&quot; And in_str_ProcessingFolder=&quot;blah&quot; And Not in_str_TestScenario.Equals(&quot;BE thrown for invalid PDF.&quot;)]" DisplayName="FD: Email in Mail Folder?" sap:VirtualizedContainerService.HintSize="135,129" sap2010:WorkflowViewState.IdRef="FlowDecision_2">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              <av:Point x:Key="ShapeLocation">499.641666666667,267.5</av:Point>
                              <av:Size x:Key="ShapeSize">135,129</av:Size>
                              <av:PointCollection x:Key="TrueConnector">499.641666666667,332 439.641666666667,332</av:PointCollection>
                              <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                              <av:PointCollection x:Key="FalseConnector">634.641666666667,332 802.141666666667,332 802.141666666667,397.5</av:PointCollection>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <FlowDecision.True>
                            <FlowStep x:Name="__ReferenceID5">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <av:Point x:Key="ShapeLocation">239.641666666667,285.5</av:Point>
                                  <av:Size x:Key="ShapeSize">200,93</av:Size>
                                  <av:PointCollection x:Key="ConnectorLocation">339.641666666667,378.5 339.641666666667,428.5</av:PointCollection>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <umam:DeleteMail Account="{x:Null}" sap2010:Annotation.AnnotationText="Delete the mail found in Given." DisplayName="Delete Mail: o365m_Mails(0)" sap:VirtualizedContainerService.HintSize="200,93" sap2010:WorkflowViewState.IdRef="DeleteMail_9" Message="[o365m_Mails(0)]" PermanentlyDelete="False">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                              </umam:DeleteMail>
                              <FlowStep.Next>
                                <FlowStep x:Name="__ReferenceID4">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <av:Point x:Key="ShapeLocation">239.641666666667,428.5</av:Point>
                                      <av:Size x:Key="ShapeSize">200,51</av:Size>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="200,51" sap2010:WorkflowViewState.IdRef="LogMessage_16" Level="Info" Message="[&quot;==FetchEmail_TestCase== Mail deleted from folder: &quot; +in_str_MailFolder+ &quot;.&quot;]" />
                                </FlowStep>
                              </FlowStep.Next>
                            </FlowStep>
                          </FlowDecision.True>
                          <FlowDecision.False>
                            <FlowDecision x:Name="__ReferenceID9" sap2010:Annotation.AnnotationText="FD: Email in RejectedFolder?" Condition="[in_str_ApplicationId&lt;&gt;&quot;blah&quot; And in_str_TenantId&lt;&gt;&quot;blah&quot; And in_str_Username&lt;&gt;&quot;blah&quot; And in_sstr_Password&lt;&gt;&quot;blah&quot; And in_str_Account&lt;&gt;&quot;blah&quot; And in_str_MailFolder&lt;&gt;&quot;blah&quot; And in_str_ProcessingFolder&lt;&gt;&quot;blah&quot; And in_str_TestScenario.Equals(&quot;BE thrown for invalid PDF.&quot;)]" DisplayName="FD: Email in Mail Folder?" sap:VirtualizedContainerService.HintSize="135,129" sap2010:WorkflowViewState.IdRef="FlowDecision_4">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  <av:Point x:Key="ShapeLocation">734.641666666667,397.5</av:Point>
                                  <av:Size x:Key="ShapeSize">135,129</av:Size>
                                  <av:PointCollection x:Key="TrueConnector">734.641666666667,462 674.641666666667,462</av:PointCollection>
                                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <FlowDecision.True>
                                <FlowStep x:Name="__ReferenceID8">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <av:Point x:Key="ShapeLocation">474.641666666667,430</av:Point>
                                      <av:Size x:Key="ShapeSize">200,64</av:Size>
                                      <av:PointCollection x:Key="ConnectorLocation">574.641666666667,494 574.641666666667,544</av:PointCollection>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <umam:GetMail Query="{x:Null}" Account="[in_str_Account]" sap2010:Annotation.AnnotationText="Get all mails from in_str_RejectedFolder" DisplayName="Get Mail: in_str_RejectedFolder" GetAsHTML="False" sap:VirtualizedContainerService.HintSize="200,64" sap2010:WorkflowViewState.IdRef="GetMail_7" MailFolder="[in_str_RejectedFolder]" MarkAsRead="False" OnlyUnreadMessages="False" Results="[o365m_Mails]" Top="[Int32.MaxValue]">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                  </umam:GetMail>
                                  <FlowStep.Next>
                                    <FlowStep x:Name="__ReferenceID6">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <av:Point x:Key="ShapeLocation">474.641666666667,544</av:Point>
                                          <av:Size x:Key="ShapeSize">200,93</av:Size>
                                          <av:PointCollection x:Key="ConnectorLocation">574.641666666667,637 574.641666666667,687</av:PointCollection>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                      <umam:DeleteMail Account="{x:Null}" sap2010:Annotation.AnnotationText="Delete the mail found in Given." DisplayName="Delete Mail: o365m_Mails(0)" sap:VirtualizedContainerService.HintSize="200,93" sap2010:WorkflowViewState.IdRef="DeleteMail_10" Message="[o365m_Mails(0)]" PermanentlyDelete="False">
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                      </umam:DeleteMail>
                                      <FlowStep.Next>
                                        <FlowStep x:Name="__ReferenceID7">
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <av:Point x:Key="ShapeLocation">474.641666666667,687</av:Point>
                                              <av:Size x:Key="ShapeSize">200,51</av:Size>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                          <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="200,51" sap2010:WorkflowViewState.IdRef="LogMessage_17" Level="Info" Message="[&quot;==FetchEmail_TestCase== Mail deleted from folder: &quot; +in_str_RejectedFolder+ &quot;.&quot;]" />
                                        </FlowStep>
                                      </FlowStep.Next>
                                    </FlowStep>
                                  </FlowStep.Next>
                                </FlowStep>
                              </FlowDecision.True>
                            </FlowDecision>
                          </FlowDecision.False>
                        </FlowDecision>
                      </FlowDecision.False>
                    </FlowDecision>
                    <x:Reference>__ReferenceID3</x:Reference>
                    <x:Reference>__ReferenceID4</x:Reference>
                    <x:Reference>__ReferenceID5</x:Reference>
                    <x:Reference>__ReferenceID6</x:Reference>
                    <x:Reference>__ReferenceID7</x:Reference>
                    <x:Reference>__ReferenceID8</x:Reference>
                    <x:Reference>__ReferenceID9</x:Reference>
                  </Flowchart>
                </ActivityAction>
              </uma:Office365ApplicationScope.Body>
            </uma:Office365ApplicationScope>
          </Sequence>
        </If.Else>
      </If>
    </Sequence>
    <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="1678,91" sap2010:WorkflowViewState.IdRef="LogMessage_7" Level="Info" Message="[&quot;==FetchEmail_TestCase== Completed.&quot;]" />
  </Sequence>
</Activity>